/*
 * Project: Store Traffic Analysis
 *
 * Problem:
 * The camera systems across several stores in multiple regions capture foot traffic data 
 * Issues such as cameras being off (leading to missing or low traffic data), 
 * light reflections, and double counting (or miscounting carts) result in high % of the data being affected.
 *
 * Business Objective:
 * To clean and normalize the traffic data by utilizing transaction data and regional traffic conversion averages,
 * ensuring more accurate and actionable performance metrics for marketing and operational decision-making.
 * Create a [marketing].[normalizedtraffic_Vw] that can be accessed and utilized by other analysts for reporting
 */

CREATE VIEW [marketing].[normalizedtraffic_Vw] AS 

WITH Traffic AS (
    SELECT 
        Traffic.[Department_Sk],
        [Dept_Pos_Id],
        [Dept_JDE_Id],
        [Dept_Id],
        [Dept_Nm],
        [DVR_Dt],
        [DVR_Dt_Sk],
        [Dept_Desc],
        CAST([DVRHour_Nbr] AS INT) AS [DVRHour_Nbr],
        [Traffic_In_Qty],
        [Store],
        ROW_NUMBER() OVER (
            PARTITION BY 
                Traffic.[Department_Sk],
                [Dept_Pos_Id],
                [Dept_JDE_Id],
                [Dept_Id], 
                [Dept_Nm],
                [Dept_Desc],
                [DVR_Dt],
                [DVR_Dt_Sk],
                CAST([DVRHour_Nbr] AS INT), 
                [Traffic_In_Qty],
                [Store]
            ORDER BY (SELECT 0)
        ) AS RowNum
    FROM ods.Traffic_Vw Traffic
    WHERE 
        [DVR_Dt_Sk] = 20240824 -- ----20190728 ---20210808
        AND [DVRHour_Nbr] BETWEEN 7 AND 21
),

SalesData AS (
    SELECT 
        [Tran_Dt_Sk],
        [Dept JDE Number],
        [Region],
        [Territory],
        [Division],
        [Tran_Tm_sk],
        [Fiscal Month],
        [Fiscal Year Number],
        [Fiscal Week Number],
        Sales.[Department_Sk],
        CASE
            WHEN [Tran_Tm_sk] = 70000  THEN 7
            WHEN [Tran_Tm_sk] = 80000  THEN 8
            WHEN [Tran_Tm_sk] = 90000  THEN 9
            WHEN [Tran_Tm_sk] = 100000 THEN 10
            WHEN [Tran_Tm_sk] = 110000 THEN 11
            WHEN [Tran_Tm_sk] = 120000 THEN 12
            WHEN [Tran_Tm_sk] = 130000 THEN 13
            WHEN [Tran_Tm_sk] = 140000 THEN 14
            WHEN [Tran_Tm_sk] = 150000 THEN 15
            WHEN [Tran_Tm_sk] = 160000 THEN 16
            WHEN [Tran_Tm_sk] = 170000 THEN 17
            WHEN [Tran_Tm_sk] = 180000 THEN 18
            WHEN [Tran_Tm_sk] = 190000 THEN 19
            WHEN [Tran_Tm_sk] = 200000 THEN 20
            WHEN [Tran_Tm_sk] = 210000 THEN 21
            ELSE -6666
        END AS Hour_sk,
        COUNT(DISTINCT [Transaction ID]) AS Transactions
    FROM [Cubes].[Sales_Vw] Sales
    LEFT JOIN [Cube_Sales].[Department_Vw] Department 
        ON Sales.[Department_Sk] = Department.[Department_Sk]
    LEFT JOIN [Cube_Sales].[Date_Vw] Dates 
        ON Sales.[Tran_Dt_Sk] = Dates.[Date_Sk]
    WHERE 
        [Tran_Dt_Sk] >= 20220801 
    GROUP BY 
        [Tran_Dt_Sk],
        [Tran_Tm_sk],
        Sales.[Department_Sk],
        [Dept JDE Number],
        [Region],
        [Division],
        [Territory],
        [Fiscal Month],
        [Fiscal Week Number],
        [Fiscal Year Number]
),

CALCULATION AS (
    SELECT 
        SalesData.[Department_Sk],
        SalesData.[Tran_Dt_Sk],
        [Dept JDE Number],
        [Region],
        [Territory],
        [Division],
        [Fiscal Month],
        [Fiscal Year Number],
        [Fiscal Week Number],
        Traffic.[DVR_Dt],
        Traffic.[DVR_Dt_Sk],
        Traffic.[DVRHour_Nbr],
        SalesData.Hour_sk,
        Traffic.[Store],
        Traffic.RowNum,
        Traffic.[Traffic_In_Qty] AS trafficdata,
        SalesData.Transactions,
        CASE
            WHEN Traffic.[Traffic_In_Qty] = 0 THEN 0
            ELSE (SalesData.Transactions / Traffic.[Traffic_In_Qty])
        END AS conversion,
        CASE
            WHEN (Traffic.[Traffic_In_Qty] = 0 OR (SalesData.Transactions / Traffic.[Traffic_In_Qty]) > 0.70) THEN 'Normalize'
            WHEN (SalesData.Transactions / Traffic.[Traffic_In_Qty]) < 0.25 THEN 'Normalize'
            WHEN (SalesData.Transactions / Traffic.[Traffic_In_Qty]) IS NULL THEN 'Normalize'
            ELSE 'Actual'
        END AS TrafficSource
    FROM SalesData
    LEFT JOIN Traffic 
        ON SalesData.[Department_Sk] = Traffic.[Department_Sk] 
        AND SalesData.[Tran_Dt_Sk] = Traffic.[DVR_Dt_Sk] 
        AND SalesData.Hour_sk = Traffic.[DVRHour_Nbr]
    WHERE 
        [Territory] IN ('North Region', 'South Region')
----------------------Filter to Store Open Hours ---------------------------------------------------------
        AND SalesData.Hour_sk BETWEEN 7 AND 21
),

RegionStats AS (
    SELECT 
        [Region],
        [Tran_Dt_Sk],
        Hour_sk,
        SUM(Transactions) / SUM(trafficdata) AS AvgConversion
    FROM CALCULATION
    WHERE TrafficSource = 'Actual'
    GROUP BY [Region], [Tran_Dt_Sk], Hour_sk
),

RegionHourlyStats AS (
    SELECT 
        [Region],
        Hour_sk,
        SUM(Transactions) / SUM(trafficdata) AS AvgHourlyConversion
    FROM CALCULATION
    WHERE TrafficSource = 'Actual'
    GROUP BY [Region], Hour_sk
),

RegionDailyStats AS (
    SELECT 
        [Region],
        [Tran_Dt_Sk],
        SUM(Transactions) / SUM(trafficdata) AS AvgDailyConversion
    FROM CALCULATION
    WHERE TrafficSource = 'Actual'
    GROUP BY [Region], [Tran_Dt_Sk]
),

NormalizedConv AS (
    SELECT 
        [Fiscal Month],
        [Fiscal Year Number],
        [Fiscal Week Number],
        calc.[Department_Sk],
        calc.[Tran_Dt_Sk],
        calc.[Dept JDE Number],
        calc.[Region],
        [Territory],
        calc.[Division],
        calc.[DVR_Dt],
        calc.[DVR_Dt_Sk],
        calc.[DVRHour_Nbr],
        calc.Hour_sk,
        calc.[Store],
        calc.RowNum,
        calc.trafficdata,
        calc.Transactions,
        calc.conversion,
        calc.TrafficSource,

        CASE 
            WHEN calc.TrafficSource = 'Normalize' OR calc.trafficdata IS NULL 
                THEN COALESCE(regionStats.AvgConversion, regionHourlyStats.AvgHourlyConversion, regionDailyStats.AvgDailyConversion)
            ELSE calc.conversion
        END AS NormalizedConversion
    FROM CALCULATION calc
    LEFT JOIN RegionStats regionStats 
        ON calc.[Region] = regionStats.[Region] 
        AND calc.[Tran_Dt_Sk] = regionStats.[Tran_Dt_Sk] 
        AND calc.Hour_sk = regionStats.Hour_sk
    LEFT JOIN RegionHourlyStats regionHourlyStats 
        ON calc.[Region] = regionHourlyStats.[Region] 
        AND calc.Hour_sk = regionHourlyStats.Hour_sk
    LEFT JOIN RegionDailyStats regionDailyStats 
        ON calc.[Region] = regionDailyStats.[Region] 
        AND calc.[Tran_Dt_Sk] = regionDailyStats.[Tran_Dt_Sk]
),

ENDED AS (
    SELECT
        [Fiscal Month],
        [Fiscal Year Number],
        [Fiscal Week Number],
        [Department_Sk],
        [Tran_Dt_Sk],
        [Dept JDE Number],
        [Region],
        [Territory],
        [Division],
        Hour_sk,
        [Store],
        trafficdata,
        Transactions,
        conversion,
        TrafficSource,
        NormalizedConversion,
        ---------- Calculate Normalized Traffic from Transaction and Normalized Conversion: Traffic = Transaction / Conversion--------------------------------------------------------------------------
        Transactions / NormalizedConversion AS NormalizedTraffic
    FROM NormalizedConv
    -- WHERE [Tran_Dt_Sk] = 20210808 AND Department_sk = 150
)

----------------------Final data output---------------------------------------------------
SELECT
    [Fiscal Month],
    [Fiscal Year Number],
    [Fiscal Week Number],
    [Department_Sk],
    [Dept JDE Number],
    [Region],
    [Territory],
    [Division],
    [Tran_Dt_Sk],
    Hour_sk,
    TrafficSource,
    SUM(Transactions) AS Transactions,
    -- conversion,
    SUM(trafficdata) AS [Captured Traffic],
    -- NormalizedConversion,
    SUM(NormalizedTraffic) AS NormalizedTraffic
FROM ENDED
GROUP BY 
    [Fiscal Month],
    [Fiscal Year Number],
    [Fiscal Week Number],
    [Department_Sk],
    [Tran_Dt_Sk],
    Hour_sk,
    [Dept JDE Number],
    [Region],
    [Territory],
    [Division],
    TrafficSource;
